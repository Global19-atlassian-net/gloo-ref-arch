title: Delegate the route to a route table
description:
  - >
    Now we'll create this route in a route table. Then we'll change the virtual service route to use a `delegateAction`
    instead of the `routeAction`. This should behave exactly as before. The advantage to separating the route
    with a route table is that it provides the ability to utilize Kubernetes RBAC to allow users to own their own
    route tables, while enabling an admin to manage the virtual service and associated domains.
steps:
  - apply:
      manifest:
        path: routetable.yaml
    title: Deploy the route table
    description:
      - First, we'll deploy the route table with the same route from our virtual service by applying the following yaml.
    docsValues:
      RenderAsYaml: "true"
  - apply:
      manifest:
        path: vs-2.yaml
    title: Change the virtual service to use a delegate action
    description:
      - In order to start delegating to the route table we created, we'll udpate the virtual service to use a `delegate action`.
    docsValues:
      RenderAsYaml: "true"
  - title: Testing the route
  - condition:
      type: Proxy
      name: gateway-proxy
      namespace: gloo-system
      jsonpath: '{.status.state}'
      value: "1"
      timeout: 10s
    description:
      - >
        First, we'll wait until Gloo updates the status on it's `Proxy` CRD to "1" or "ACCEPTED". This indicates that
        Gloo has validated the configuration and sent the updated configuration to Envoy.
  - curl:
      path: /
      statusCode: 200
      service:
        name: gateway-proxy
        namespace: gloo-system