steps:
  - apply:
      template:
        path: oauth-secret.tmpl
    values:
      ClientSecret: "env:GOOGLE_CLIENT_SECRET"
    docs:
      title: Store the google client secret
      description: >
        In order to authenticate with Google, Gloo needs a client secret ID and value from Google. This can be created in the
        [google console](https://console.developers.google.com/apis/credentials), and will be associated with one of your
        GCP projects so that users in that project can authenticate with oauth.

        Store this secret value in an environment variable called `CLIENT_SECRET`. Now this secret can be written to Kubernetes with
        `glooctl create secret --client-secret $CLIENT_SECRET google-oauth`.
  - apply:
      template:
        path: auth-config.tmpl
    values:
      ClientId: "env:CLIENT_ID"
    docs:
      title: Store the auth config
      description: >
        Now we can create a gloo auth config that references this client secret and provides the rest of the google
        oauth information. Note that you should replace `<CLIENT_ID>` with the real ID associated with the secret value
        from the previous step.
      notes: >
        To easily copy a yaml snippet into a command, copy it to the clipboard then run `pbcopy | kubectl apply -f -`.
      values:
        ClientId: "<CLIENT_ID>"
        RenderAsYaml: true
